@prefix xsd:     <http://www.w3.org/2001/XMLSchema#>.
@prefix sd:      <http://www.w3.org/ns/sparql-service-description#>.
@prefix frmt:    <http://www.w3.org/ns/formats/>.
@prefix dct:     <http://purl.org/dc/terms/>.
@prefix shacl:   <http://www.w3.org/ns/shacl#>.
@prefix void:    <http://rdfs.org/ns/void#>.
@prefix hydra:   <http://www.w3.org/ns/hydra/core#>.
@prefix schema:  <http://schema.org/>.
@prefix skos:    <http://www.w3.org/2004/02/skos/core#>.
@prefix dwc:     <http://rs.tdwg.org/dwc/terms/>.
@prefix sms:     <http://ns.inria.fr/sparql-micro-service#>.

@base            <https://sparql-micro-services.org/service/gbif/getClassificationByID_sd/>.

# This file is loaded as graph <ServiceDescription>
<>
    a sd:Service, sms:Service;
    sd:endpoint <>;
    sd:supportedLanguage sd:SPARQL11Query;
    sd:feature sd:BasicFederatedQuery, sd:EmptyGraphs;
    sd:resultFormat frmt:SPARQL_Results_XML, frmt:SPARQL_Results_JSON, frmt:SPARQL_Results_CSV, frmt:SPARQL_Results_TSV,
                    frmt:RDF_XML, frmt:Turtle, frmt:JSON-LD, frmt:Trig;
    schema:name '''Retrieve from <a href="https://www.gbif.org/" target="_new">GBIF</a> (Global Biodiversity Information Facility) the classification of a taxon given by its taxon name identifier.''';

    schema:description '''The result is a list of instances of dwc:Taxon, one for each parent of the taxon. Each taxon belonging to the classification comes with the following information: scientific name (dwc:scientificNameID), scientific name (dwc:scientificName), the URL of the taxon Web page (schema:sameAs), taxonomic rank, parent taxon (skos:broader).<br>Compared to the gbif/getTaxonByID micro-service that provides, together with the taxon information, the names of the taxa corresponding to the major taxonomic ranks (kingdom, phylum, class, order, family, genus), this service provides the whole classification, including taxa corresponding to secondary ranks (superfamily, subfamily, subgenus, etc.).''';

    sd:defaultDataset [
        a sd:Dataset, void:Dataset;
        sd:defaultGraph [ a sd:Graph ];
        sd:namedGraph   [ a sd:Graph; sd:name <ServiceDescription> ];

        void:vocabulary <http://schema.org/>, <http://rs.tdwg.org/dwc/terms/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/ns/hydra/core#>;
        void:sparqlEndpoint <>;
    ];

    schema:keywords "gbif", "taxonomy", "sparql", "microservice", "biodiversity", "lifesciences", "fauna", "flora", "species", "taxon", "scientific name";
    schema:publisher [ a schema:Organization;
        schema:name "Université Côte d'Azur, CNRS, Inria, I3S";
        schema:logo
            "http://univ-cotedazur.fr/fr/university/communication-presse/charte-et-logos/logo/png/uca-logo-large",
            "https://iww.inria.fr/dircom/logoinria-eng.png",
            "http://www.cnrs.fr/themes/custom/cnrs/logo.svg";
        schema:contactPoint [ a schema:ContactPoint;
            schema:contactType "technical support";
            schema:name "Franck Michel";
            schema:email "franck.michel@cnrs.fr";
            schema:url <https://w3id.org/people/franckmichel>;
        ];
    ];

    sms:exampleQuery '''
    prefix dwc: <http://rs.tdwg.org/dwc/terms/>

    SELECT * WHERE {
      ?taxon a dwc:Taxon;
        dwc:scientificNameID      "2360305";
        skos:broader+ [
            dwc:scientificName   ?parentName;
            dwc:scientificNameID ?parentNameID;
            taxrefp:hasRank      ?rankUri;
        ]
    }
    ''';


    # 432000s = 5 days, 2592000s = 30 days
    sms:cacheExpiresAfter "P2592000S"^^xsd:duration;

    # Add provenance information to the graph generated at each invocation?
    sms:addProvenance "true"^^xsd:boolean;

    dct:source [
        a schema:WebAPI; schema:name "GBIF API";
        schema:url <https://www.gbif.org/developer/summary>;
        schema:potentialAction <APIService>;
    ];
    .

# Web API service being wrapped by this µ-service + parameters binding
<APIService>
    a schema:SearchAction;
    a hydra:IriTemplate;
    hydra:template "http://api.gbif.org/v1/species/{id}/parents";
    hydra:mapping [
        hydra:variable "id";
        schema:description "taxon name identifier (GBIF key).";
        hydra:required "true"^^xsd:boolean;
        hydra:property dwc:scientificNameID;
        skos:example "2360305";
    ].
