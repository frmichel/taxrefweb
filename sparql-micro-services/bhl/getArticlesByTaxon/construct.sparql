CONSTRUCT {
    ?articleUri
        a schema:ScholarlyArticle;
        schema:mainEntityOfPage ?partUrl;
        schema:name ?title;
        schema:hasPart ?pageUrl;
        schema:thumbnailUrl ?thumbnailUrl;
        schema:datePublished ?date;

        schema:author ?authorName;

        schema:pageStart ?startPageNumber;
        schema:pageEnd ?endPageNumber;

        schema:isPartOf [
            a schema:PublicationEvent;
            schema:name ?containerTitle;
            schema:volumeNumber ?volume;
            schema:issueNumber ?issue;
            schema:datePublished ?date;
            schema:publisher ?publicationDetails;
        ];
    .
}
WHERE {
    ?result api:Result [
        api:PartID ?partId;
        api:PartUrl ?partUrl;
        api:GenreName ?genreName;
        api:Title ?title;

        api:ContainerTitle ?containerTitle;
        api:PublicationDetails ?publicationDetails;
        api:Volume ?volume;
        api:Issue ?issue;
        api:Date ?date;

        api:StartPageNumber ?startPageNumber;
        api:EndPageNumber ?endPageNumber;

        api:Authors [ api:Name ?authorName; api:CreatorID ?creatorID ];

        api:Pages [
          api:PageUrl ?pageUrl;
          api:ThumbnailUrl ?thumbnailUrl;
          api:FullSizeImageUrl ?fullSizeImageUrl;
          api:PageNumbers [ api:Number ?pageNumber ]
        ];
    ].

    FILTER (LCASE(?genreName) = "article")
    FILTER (CONTAINS(?pageNumber, ?startPageNumber))

    # Dereferenceable URI: customize with the hostname of your Web server
    BIND (IRI(concat("https://sparql-micro-services.org/ld/bhl/part/", ?partId)) AS ?articleUri)
}
