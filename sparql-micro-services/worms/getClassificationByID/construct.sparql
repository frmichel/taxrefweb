CONSTRUCT {
    ?taxonUri a dwc:Taxon;
        dwc:taxonID ?id;
        dwc:scientificName ?scientificname;
        taxrefp:hasRank ?taxrefRankUri;
        schema:sameAs ?webpage;
        skos:broader ?parentTaxon;
        .
}
WHERE {
    ?c
        api:AphiaID ?id;
        api:scientificname ?scientificname;
        api:rank ?rkName.
     OPTIONAL {
        ?c1 api:child ?c.
        ?c1 api:AphiaID ?parentID.
     }

    bind(iri(concat("http://www.marinespecies.org/aphia.php?p=taxdetails&id=", ?id)) AS ?webpage)
    bind(sms:getRankUri(?rkName) AS ?taxrefRankUri)
    bind(IRI(concat("http://example.org/ld/worms/taxon/", ?id)) AS ?taxonUri)
    bind(IRI(concat("http://example.org/ld/worms/taxon/", ?parentID)) AS ?parentTaxon)
}

function sms:getRankUri(?rankName){
    IRI(concat("http://taxref.mnhn.fr/lod/taxrank/", sms:getTaxrefRankName(?rankName)))
}

# Return the TAXREF-LD rank name, given the name rank name in WoRMS
function sms:getTaxrefRankName(?rkName) {
    # Transform "Subabc" into "SubAbc", then thing same for Super, Infra and Parv
    if (strstarts(?rkName, "Sub")) {
        let (?after = strafter(?rkName, "Sub")) {
            return(concat("Sub", ucase(substr(?after, 1, 1)), substr(?after, 2)))
        }
    }
    else if (strstarts(?rkName, "Super")) {
        let (?after = strafter(?rkName, "Super")) {
            return(concat("Super", ucase(substr(?after, 1, 1)), substr(?after, 2)))
        }
    }
    else if (strstarts(?rkName, "Infra")) {
        let (?after = strafter(?rkName, "Infra")) {
            return(concat("Infra", ucase(substr(?after, 1, 1)), substr(?after, 2)))
        }
    }
    else if (strstarts(?rkName, "Parv")) {
        let (?after = strafter(?rkName, "Parv")) {
            return(concat("Parv", ucase(substr(?after, 1, 1)), substr(?after, 2)))
        }
    }
    else { return(?rkName) }
}